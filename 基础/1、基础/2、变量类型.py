# Python 中的变量赋值不需要类型声明。
# 每个变量在内存中创建，都包括变量的标识，名称和数据这些信息。
# 每个变量在使用前都必须赋值，变量赋值以后该变量才会被创建。
# 等号（=）用来给变量赋值。
# 等号（=）运算符左边是一个变量名,等号（=）运算符右边是存储在变量中的值

age = 18  # 整形
height = 1.75  # 浮点型
name = "jonty"  # 字符串

# python 3.0+ 输出需要括号

print(age)

# 同时赋值
a = b = c = 1;  # 均为1 分配在相同的内存空间上

# 1 和 2 分别分配给变量 a 和 b，字符串对象 "john" 分配给变量 c
a, b, c = 1, 2, "jonty"

# 标准数据类型
# Number 数字
# String 字符串
# List 列表
# Tuple 元组
# Dictionary 字典


print(type(a))

# 数值运算

# 加法
print(5 + 4)

# 减法
print(4.2 - 1)

# 乘法
print(3 * 4)

# 除法
print(9 / 3)  # 得到浮点数
print(9 // 3)  # 得到整数

# 取余
print(8 % 3)

# 乘方
print(2 ** 5)

"""
1、Python可以同时为多个变量赋值，如a, b = 1, 2。
2、一个变量可以通过赋值指向不同类型的对象。
3、数值的除法包含两个运算符：/ 返回一个浮点数，// 返回一个整数。
4、在混合计算时，Python会把整型转换成为浮点数。
"""

# String 字符串
# 字符串用'或者"括起来，用\代表转义

# 字符串截取
str = "python"
print(str)  # 输出字符串
print(str[0:-1])  # 输出0到倒数第二个字符
print(str[0])  # 输出第一个字符
print(str[2:])  # 输出第三个之后的所有字符
print(str * 2)  # 赋值
print(str + "hi")  # 拼接

# \转义 如果你不想让反斜杠发生转义，可以在字符串前面添加一个 r，表示原始字符串：
print(r"hello\\world")
# 反斜杠可作为续航符 表示下一行是上一行的延续

# python字符串不能被改变 向一个索引位置赋值会报错


# 常用类型转换函数
# int()转整数
# float()转浮点型
# complex()创建一个复数
# str(x)转字符串
# repr()将x转换成表达式字符串
# eval()计算python表达式
# chr()转字符
# ord()将一个字符转换为对应整数值
# hex()转16进制
# oct()转8进制

